local running = false
local rainbowThread = nil

local rainbowColors = {
    Color3.fromRGB(255, 0, 0),
    Color3.fromRGB(255, 165, 0),
    Color3.fromRGB(255, 255, 0),
    Color3.fromRGB(0, 255, 0),
    Color3.fromRGB(0, 0, 255),
    Color3.fromRGB(128, 0, 128),
    Color3.fromRGB(255, 20, 147)
}

local function isCarPart(part)
    local partName = part.Name:lower()
    return partName:find("wheel") or partName:find("chassis") or partName:find("body")
end

local function getNearbyCarParts()
    local player = game.Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()
    local carParts = {}
    for _, obj in ipairs(workspace:GetDescendants()) do
        if obj:IsA("BasePart") and isCarPart(obj) then
            local distance = (obj.Position - character.HumanoidRootPart.Position).Magnitude
            if distance < 10 then
                table.insert(carParts, obj)
            end
        end
    end
    return carParts
end

local function applyRainbowEffect()
    local carParts = getNearbyCarParts()
    local colorIndex = 1
    local nextColorIndex = 2
    local transitionStep = 0

    while running do
        local currentColor = rainbowColors[colorIndex]
        local nextColor = rainbowColors[nextColorIndex]
        local interpolatedColor = currentColor:Lerp(nextColor, transitionStep)

        for _, part in ipairs(carParts) do
            if part and part.Parent then
                part.Color = interpolatedColor
            end
        end

        transitionStep = transitionStep + 0.05
        if transitionStep >= 1 then
            transitionStep = 0
            colorIndex = nextColorIndex
            nextColorIndex = (nextColorIndex % #rainbowColors) + 1
        end

        task.wait(0.05)
    end
end

StyleTab:AddToggle({
    Name = "Rainbow Auto",
    Default = false,
    Callback = function(Value)
        running = Value
        if running then
            rainbowThread = task.spawn(applyRainbowEffect)
        else
            if rainbowThread then
                task.cancel(rainbowThread)
            end
        end
    end
})
