-- Interface avanc√©e Rayfield
local Rayfield = loadstring(game:HttpGet("https://raw.githubusercontent.com/shlexware/Rayfield/main/source"))()

local Window = Rayfield:CreateWindow({
    Name = "Grow A Garden | Hub by ChatGPT",
    LoadingTitle = "Chargement du script...",
    LoadingSubtitle = "Grow A Garden Auto System",
    ConfigurationSaving = {
        Enabled = true,
        FolderName = "GrowAGardenHub",
        FileName = "GAG_Config"
    },
    Discord = {
        Enabled = false,
    },
    KeySystem = false,
})

local player = game.Players.LocalPlayer
local autoCollect = false
local autoWater = false
local autoHarvest = false

-- üì¶ Auto Collect (Coins)
Window:CreateToggle({
    Name = "Auto Collect Coins üí∞",
    CurrentValue = false,
    Callback = function(Value)
        autoCollect = Value
        while autoCollect and task.wait(1) do
            for _, v in pairs(workspace:GetDescendants()) do
                if v.Name == "Coin" and v:IsA("Part") then
                    v.CFrame = player.Character.HumanoidRootPart.CFrame
                end
            end
        end
    end,
})

-- üß∫ Auto R√©colte
Window:CreateToggle({
    Name = "Auto Harvest üåΩ",
    CurrentValue = false,
    Callback = function(Value)
        autoHarvest = Value
        while autoHarvest and task.wait(1) do
            local garden = workspace:FindFirstChild("GardenPlots")
            if garden then
                for _, plot in pairs(garden:GetDescendants()) do
                    if plot.Name == "Harvest" and plot:IsA("ClickDetector") then
                        fireclickdetector(plot)
                    end
                end
            end
        end
    end,
})

-- üíß Auto Arrosage
Window:CreateToggle({
    Name = "Auto Watering üíß",
    CurrentValue = false,
    Callback = function(Value)
        autoWater = Value
        while autoWater and task.wait(1.5) do
            local garden = workspace:FindFirstChild("GardenPlots")
            if garden then
                for _, plot in pairs(garden:GetDescendants()) do
                    if plot.Name == "Water" and plot:IsA("ClickDetector") then
                        fireclickdetector(plot)
                    end
                end
            end
        end
    end,
})

-- üìç T√©l√©portations
local TeleportTab = Window:CreateTab("T√©l√©portation", 4483362458)
TeleportTab:CreateButton({
    Name = "Aller au Jardin ü™¥",
    Callback = function()
        player.Character.HumanoidRootPart.CFrame = CFrame.new(25, 3, -30)
    end,
})

TeleportTab:CreateButton({
    Name = "Aller au March√© üõí",
    Callback = function()
        player.Character.HumanoidRootPart.CFrame = CFrame.new(-50, 3, 20)
    end,
})

-- üîº Auto Buy Upgrades
local autoBuyUpgrades = false

Window:CreateToggle({
    Name = "Auto Buy Upgrades üõ†Ô∏è",
    CurrentValue = false,
    Callback = function(Value)
        autoBuyUpgrades = Value
        while autoBuyUpgrades and task.wait(2) do
            -- Ex√©cute les achats depuis les boutons dans le GUI (si disponibles)
            local upgradeFolder = player.PlayerGui:FindFirstChild("Upgrades")
            if upgradeFolder then
                for _, btn in pairs(upgradeFolder:GetDescendants()) do
                    if btn:IsA("TextButton") and btn.AutoButtonColor == true then
                        pcall(function()
                            btn:Activate()
                        end)
                    end
                end
            end

            -- En cas de m√©thode dans le monde (ex: ClickDetectors pour des upgrades physiques)
            local upgradeParts = workspace:FindFirstChild("Upgrades")
            if upgradeParts then
                for _, v in pairs(upgradeParts:GetDescendants()) do
                    if v:IsA("ClickDetector") then
                        pcall(function()
                            fireclickdetector(v)
                        end)
                    end
                end
            end
        end
    end,
})
