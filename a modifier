local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")

local player = Players.LocalPlayer

-- Variables Fly
local flying = false
local flySpeed = 50
local bodyVelocity

-- GUI
local ScreenGui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
ScreenGui.Name = "AdvancedMenu"

local Frame = Instance.new("Frame", ScreenGui)
Frame.Size = UDim2.new(0, 350, 0, 400)
Frame.Position = UDim2.new(0, 20, 0, 100)
Frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
Frame.BorderSizePixel = 0
Frame.BackgroundTransparency = 0.3
Frame.Active = true
Frame.Draggable = true

local function createButton(text, position)
    local btn = Instance.new("TextButton", Frame)
    btn.Size = UDim2.new(0, 300, 0, 40)
    btn.Position = position
    btn.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
    btn.TextColor3 = Color3.new(1,1,1)
    btn.Text = text
    btn.Font = Enum.Font.SourceSansBold
    btn.TextSize = 20
    btn.AutoButtonColor = true
    return btn
end

local function createLabel(text, position)
    local lbl = Instance.new("TextLabel", Frame)
    lbl.Size = UDim2.new(0, 300, 0, 25)
    lbl.Position = position
    lbl.BackgroundTransparency = 1
    lbl.TextColor3 = Color3.new(1,1,1)
    lbl.Font = Enum.Font.SourceSans
    lbl.Text = text
    lbl.TextXAlignment = Enum.TextXAlignment.Left
    return lbl
end

local function createSlider(min, max, default, position, labelText)
    local lbl = createLabel(labelText .. ": " .. tostring(default), position)
    local sliderFrame = Instance.new("Frame", Frame)
    sliderFrame.Size = UDim2.new(0, 300, 0, 30)
    sliderFrame.Position = UDim2.new(0, position.X.Offset, 0, position.Y.Offset + 25)
    sliderFrame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    sliderFrame.BorderSizePixel = 0

    local slider = Instance.new("TextButton", sliderFrame)
    slider.Size = UDim2.new(0, 20, 1, 0)
    slider.Position = UDim2.new((default - min) / (max - min), 0, 0, 0)
    slider.BackgroundColor3 = Color3.fromRGB(150, 150, 150)
    slider.AutoButtonColor = false

    local dragging = false

    slider.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
        end
    end)

    slider.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = false
        end
    end)

    slider.InputChanged:Connect(function(input)
        if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
            local relativeX = math.clamp(input.Position.X - sliderFrame.AbsolutePosition.X, 0, sliderFrame.AbsoluteSize.X)
            slider.Position = UDim2.new(relativeX / sliderFrame.AbsoluteSize.X, 0, 0, 0)
            local value = math.floor(min + (max - min) * (relativeX / sliderFrame.AbsoluteSize.X))
            lbl.Text = labelText .. ": " .. tostring(value)
            if labelText == "Fly Speed" then
                flySpeed = value
            end
        end
    end)

    return lbl, sliderFrame, slider
end

-- Buttons
local flyButton = createButton("Toggle Fly (OFF)", UDim2.new(0, 20, 0, 20))
local bringAllButton = createButton("Bring All Players", UDim2.new(0, 20, 0, 80))
local espToggleButton = createButton("Toggle ESP (OFF)", UDim2.new(0, 20, 0, 320))

-- Teleport UI
createLabel("Teleport to player:", UDim2.new(0, 20, 0, 140))
local teleportInput = Instance.new("TextBox", Frame)
teleportInput.PlaceholderText = "Enter player name"
teleportInput.Position = UDim2.new(0, 20, 0, 170)
teleportInput.Size = UDim2.new(0, 300, 0, 30)
teleportInput.ClearTextOnFocus = false
teleportInput.Text = ""

local teleportButton = createButton("Teleport", UDim2.new(0, 20, 0, 210))

-- Fly Speed Slider
createSlider(10, 200, flySpeed, UDim2.new(0, 20, 0, 260), "Fly Speed")

-- Fly functions
local function startFly()
    local character = player.Character
    if character and character:FindFirstChild("HumanoidRootPart") then
        bodyVelocity = Instance.new("BodyVelocity")
        bodyVelocity.MaxForce = Vector3.new(1e5, 1e5, 1e5)
        bodyVelocity.Velocity = Vector3.new(0, 0, 0)
        bodyVelocity.Parent = character.HumanoidRootPart
    end
end

local function stopFly()
    if bodyVelocity then
        bodyVelocity:Destroy()
        bodyVelocity = nil
    end
end

local function toggleFly()
    flying = not flying
    if flying then
        flyButton.Text = "Toggle Fly (ON)"
        startFly()
    else
        flyButton.Text = "Toggle Fly (OFF)"
        stopFly()
    end
end

flyButton.MouseButton1Click:Connect(toggleFly)

RunService.RenderStepped:Connect(function()
    if flying and bodyVelocity then
        local direction = Vector3.new(0,0,0)
        if UserInputService:IsKeyDown(Enum.KeyCode.W) then
            direction = direction + workspace.CurrentCamera.CFrame.LookVector
        end
        if UserInputService:IsKeyDown(Enum.KeyCode.S) then
            direction = direction - workspace.CurrentCamera.CFrame.LookVector
        end
        if UserInputService:IsKeyDown(Enum.KeyCode.A) then
            direction = direction - workspace.CurrentCamera.CFrame.RightVector
        end
        if UserInputService:IsKeyDown(Enum.KeyCode.D) then
            direction = direction + workspace.CurrentCamera.CFrame.RightVector
        end
        if UserInputService:IsKeyDown(Enum.KeyCode.Space) then
            direction = direction + Vector3.new(0,1,0)
        end
        if UserInputService:IsKeyDown(Enum.KeyCode.LeftControl) then
            direction = direction - Vector3.new(0,1,0)
        end

        if direction.Magnitude > 0 then
            direction = direction.Unit * flySpeed
        else
            direction = Vector3.new(0,0,0)
        end

        bodyVelocity.Velocity = direction
    end
end)

-- Bring All Players function
bringAllButton.MouseButton1Click:Connect(function()
    local character = player.Character
    if not character or not character:FindFirstChild("HumanoidRootPart") then return end
    local hrp = character.HumanoidRootPart
    for _, plr in pairs(Players:GetPlayers()) do
        if plr ~= player and plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") then
            plr.Character.HumanoidRootPart.CFrame = hrp.CFrame * CFrame.new(3, 0, 0)
        end
    end
end)

-- Teleport to player
teleportButton.MouseButton1Click:Connect(function()
    local targetName = teleportInput.Text
    if targetName == "" then return end
    local targetPlayer = Players:FindFirstChild(targetName)
    if targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
        local hrp = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
        if hrp then
            hrp.CFrame = targetPlayer.Character.HumanoidRootPart.CFrame + Vector3.new(0,5,0)
        end
    else
        teleportInput.Text = "Player not found"
    end
end)

-- ESP Implementation
local espEnabled = false
local espTags = {}

local function createESPTag(plr)
    if plr.Character and plr.Character:FindFirstChild("Head") then
        local head = plr.Character.Head
        if espTags[plr] then
            espTags[plr]:Destroy()
            espTags[plr] = nil
        end

        local billboard = Instance.new("BillboardGui")
        billboard.Name = "ESPTag"
        billboard.Adornee = head
        billboard.Size = UDim2.new(0, 100, 0, 25)
        billboard.StudsOffset = Vector3.new(0, 2, 0)
        billboard.AlwaysOnTop = true
        billboard.Parent = head

        local label = Instance.new("TextLabel", billboard)
        label.Size = UDim2.new(1, 0, 1, 0)
        label.BackgroundTransparency = 1
        label.TextColor3 = Color3.new(1, 0, 0)
        label.Font = Enum.Font.SourceSansBold
        label.TextScaled = true
        label.Text = plr.Name

        espTags[plr] = billboard
    end
end

local function removeESPTag(plr)
    if espTags[plr] then
        espTags[plr]:Destroy()
        espTags[plr] = nil
    end
end

local function toggleESP()
    espEnabled = not espEnabled
    if espEnabled then
        espToggleButton.Text = "Toggle ESP (ON)"
        for _, plr in pairs(Players:GetPlayers()) do
            if plr ~= player then
                createESPTag(plr)
            end
        end
    else
        espToggleButton.Text = "Toggle ESP (OFF)"
        for plr, _ in pairs(espTags) do
            removeESPTag(plr)
        end
    end
end

espToggleButton.MouseButton1Click:Connect(toggleESP)

Players.PlayerAdded:Connect(function(plr)
    plr.CharacterAdded:Connect(function(char)
        wait(1)
        if espEnabled then
            createESPTag(plr)
        end
    end)
end)

Players.PlayerRemoving:Connect(function(plr)
    removeESPTag(plr)
end)

-- Init ESP for existing players if enabled
if espEnabled then
    for _, plr in pairs(Players:GetPlayers()) do
        if plr ~= player then
            createESPTag(plr)
        end
    end
end
